{"version":3,"sources":["NavBar.tsx","routes/About.tsx","TodoForm.tsx","TodoList.tsx","routes/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","className","href","id","activeClassName","exact","to","About","history","useHistory","onClick","push","TotoForm","props","inputRef","useRef","ref","name","onKeyPress","event","onAddTask","key","current","value","htmlFor","TodoList","handleClick","currentTarget","dataset","todoId","toggleCompleted","Number","handleDelete","confirm","onDeleteTodo","list","todos","map","el","completed","text","data-todo-id","type","checked","Main","useState","setTodos","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","TodoForm","task","prevState","Date","getTime","filter","todo","newTodos","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.595d3c9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavBar: React.FC = () => {\r\nreturn <>\r\n <nav>\r\n    <div className=\"nav-wrapper blue darken-4 nav-bar_offset\">\r\n      <a href=\"/\" className=\"brand-logo\">Hellow TS</a>\r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n        <li><NavLink activeClassName=\"active_link\" exact to=\"/\">Главная</NavLink></li>\r\n        <li><NavLink activeClassName=\"active_link\" to=\"/about\">О чем-то</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</>\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst About: React.FC = () => {\r\n    const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push('/');\r\n  }\r\n\r\nreturn <div className='about-page'>\r\n    <h1>About page!</h1>\r\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quasi deleniti explicabo, qui aut molestias quo vel recusandae corrupti a non! Error architecto at, sapiente nobis exercitationem reprehenderit harum ipsum odio.</p>\r\n    <button className=\"btn\" onClick={handleClick}>Вернуться на главную</button>\r\n</div>;\r\n}\r\n\r\nexport default About;","import React, { useRef } from 'react';\r\n\r\ninterface ITotoForm {\r\n    onAddTask(task: string): void;\r\n}\r\n\r\nconst TotoForm: React.FunctionComponent<ITotoForm> = props => {\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        const {onAddTask} = props;\r\n\r\n        if (event.key === \"Enter\") {\r\n            onAddTask(inputRef.current!.value);\r\n            inputRef.current!.value = '';\r\n        }\r\n\r\n    }\r\n\r\n    return <div className=\"todo-from input-field\">\r\n        <input\r\n            ref={inputRef}\r\n            id=\"text\"\r\n            name=\"text\"\r\n            onKeyPress={handleKeyPress}\r\n        />\r\n        <label htmlFor=\"text\" className=\"active\">Введите название дела</label>\r\n    </div>;\r\n}\r\n\r\nexport default TotoForm;","import React from 'react';\r\n\r\nimport { ITodo } from './interfaces';\r\n\r\ntype TodoListType = {\r\n    todos: ITodo[],\r\n    onDeleteTodo(id: number): void,\r\n    toggleCompleted(id: number): void\r\n}\r\n\r\ndeclare var confirm: (text: string) => boolean\r\n\r\nconst TodoList: React.FC<TodoListType> = (props) => {\r\n    const handleClick = (event: React.SyntheticEvent<HTMLElement>) => {\r\n        const id = event.currentTarget.dataset.todoId;\r\n        props.toggleCompleted(Number(id));\r\n    }\r\n\r\n    const handleDelete = (event: React.SyntheticEvent<HTMLElement>) => {\r\n        const needDelete = confirm('Вы действительно хотели удалить данную запись?');\r\n        if (needDelete) {\r\n            const id = event.currentTarget.dataset.todoId;\r\n            props.onDeleteTodo(Number(id));\r\n        }\r\n    }\r\n\r\n    const list = props.todos.map(el => {\r\n        const {id} = el;\r\n        const { completed, text } = el;\r\n\r\n        return <li key={id} className=\"todo-wrapper\">\r\n                <label data-todo-id={id} \r\n                    htmlFor=\"todo\" \r\n                    className=\"todo_checkbox\" \r\n                    onClick={handleClick}\r\n                >\r\n                    <input type=\"checkbox\"\r\n                        checked={completed}\r\n                    />\r\n                    <span className=\"todo_text\">{text}</span>\r\n                </label>\r\n                <i className=\"material-icons red-text\"\r\n                    data-todo-id={id}\r\n                    onClick={handleDelete}\r\n                >delete</i>\r\n        </li>\r\n    });\r\n\r\n    return <ul>\r\n        {list}\r\n    </ul>;\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\r\nimport TodoForm from '../TodoForm';\r\nimport TodoList from '../TodoList';\r\nimport { ITodo } from '../interfaces';\r\n\r\nconst Main: React.FC = (props) => {\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n\r\n    const handleAddTask = (task: string): void => {\r\n        setTodos(prevState => {\r\n            const newTodo: ITodo = {\r\n                text: task,\r\n                id: new Date().getTime(),\r\n                completed: false\r\n            }\r\n\r\n            return [newTodo, ...prevState];\r\n        });\r\n    }\r\n\r\n    const handleDeleteTodo = (id: number): void => {\r\n        setTodos(prevState => prevState.filter(todo => todo.id !== id));\r\n    }\r\n\r\n    const toggleCompleted = (id: number): void => {\r\n        const newTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.completed = !todo.completed;\r\n            }\r\n\r\n            return todo;\r\n        });\r\n\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const todos = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\r\n        setTodos(todos);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    return <>\r\n        <div className=\"container\">\r\n            <TodoForm onAddTask={handleAddTask} />\r\n            <TodoList todos={todos}\r\n                onDeleteTodo={handleDeleteTodo}\r\n                toggleCompleted={toggleCompleted}\r\n            />\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport NavBar from './NavBar';\nimport About from './routes/About'\nimport Main from './routes/Main';\n\n\nconst App: React.FC = () => {\n\n\n  return <BrowserRouter>\n    <NavBar />\n    <Switch>\n    <Route path=\"/about\" >\n        <About />\n      </Route>\n      <Route path=\"/\" >\n        <Main />\n      </Route>\n    </Switch>\n  </BrowserRouter>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}